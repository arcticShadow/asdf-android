#!/usr/bin/env bash
set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

android_sdk_root=$(find_android_sdk_root)

# Additional paths for platform tools and other binaries
paths=(
    ${android_sdk_root}/cmdline-tools/latest/bin
)

# if platform-tools installed
if [ -d "${android_sdk_root}/platform-tools" ]; then
    paths+=(${android_sdk_root}/platform-tools)
fi

# if tools installed
if [ -d "${android_sdk_root}/tools" ]; then
    paths+=(${android_sdk_root}/tools)
    paths+=(${android_sdk_root}/tools/bin)
fi



##
## Construct output
##

# Print paths space-separated
# Convert absolute paths to relative paths based on ASDF_INSTALL_PATH

declare -a relative_paths
for path in "${paths[@]}"; do
  # Get the common prefix between ASDF_INSTALL_PATH and current path
  IFS='/' read -ra path_parts <<< "$path"
  IFS='/' read -ra install_parts <<< "$ASDF_INSTALL_PATH"
  
  # Find where paths diverge
  common_length=0
  for ((i=1; i<${#path_parts[@]} && i<${#install_parts[@]}; i++)); do
    if [[ "${path_parts[i]}" != "${install_parts[i]}" ]]; then
      break
    fi
    ((common_length++))
  done
  
  # Build relative path
  relative_path="$ASDF_INSTALL_PATH"
  # Add "../" for each remaining component in ASDF_INSTALL_PATH
  for ((i=common_length+1; i<${#install_parts[@]}; i++)); do
    relative_path+="/..";
  done
  # Add remaining path components
  for ((i=common_length+1; i<${#path_parts[@]}; i++)); do
    relative_path+="/${path_parts[i]}"
  done
  
  relative_paths+=("$relative_path")
done

##
## Print output
##
echo "${relative_paths[*]}"

